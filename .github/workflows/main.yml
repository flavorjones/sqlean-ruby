name: Test

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true
on:
  workflow_dispatch:
  schedule:
    - cron: "0 8 * * 3" # At 08:00 on Wednesday # https://crontab.guru/#0_8_*_*_3
  push:
    branches:
      - main
    tags:
      - v*.*.*
  pull_request:
    types: [opened, synchronize]
    branches:
      - '*'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: rm -f Gemfile.lock
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.3"
          bundler-cache: true
      - run: bundle exec rake standard

  basic:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: rm -f Gemfile.lock
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.3"
          bundler-cache: true
      - run: bundle exec rake test

  non-linux:
    name: "${{ matrix.os }} ${{ matrix.ruby }}"
    needs: basic
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        ruby: ["3.3"]
        os:
          - macos-13 # x86_64-darwin
          - macos-14 # arm64-darwin
          - windows-latest # x64-mingw32 and x64-mingw-ucrt
    steps:
      - uses: actions/checkout@v4
      - run: rm -f Gemfile.lock
        shell: bash
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true
      - run: bundle exec rake test

  linux:
    name: "${{ matrix.platform }} ${{ matrix.ruby }}"
    needs: basic
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        ruby: ["3.3"]
        platform:
          - aarch64-linux-gnu
          # - aarch64-linux-musl # builds not available yet
          - x86_64-linux-gnu
          - x86_64-linux-musl
        include:
          - { platform: x86_64-linux-musl, docker_tag: "-alpine" }
          # - { platform: aarch64-linux-musl, docker_tag: "-alpine", docker_platform: "--platform=linux/arm64" }
          - { platform: aarch64-linux-gnu, docker_platform: "--platform=linux/arm64" }
    steps:
      - uses: actions/checkout@v4
      - run: rm -f Gemfile.lock
      - run: |
          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
          docker run --rm -v $PWD:/work -w /work \
            ${{ matrix.docker_platform }} ruby:${{ matrix.ruby }}${{ matrix.docker_tag }} \
            sh -c "bundle install --without=lint && bundle exec rake test"
